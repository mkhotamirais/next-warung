generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

generator db_seed {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  phone         String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
  blogs    Blog[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Product {
  id    String @id @default(cuid())
  name  String
  price Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model BlogCategory {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}

model Blog {
  id         String       @id @default(cuid())
  title      String
  slug       String       @unique
  content    String
  imageUrl   String // URL gambar blog
  category   BlogCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  author     User         @relation(fields: [authorId], references: [id])
  authorId   String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}
